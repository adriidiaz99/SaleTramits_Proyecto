# Cambiamos el puerto, por si tenemos algo ejecutando en 8080
server.port=9000

# URL jdbc de conexión a la base de datos
# spring.datasource.url=jdbc:h2:mem:db
spring.datasource.url=jdbc:h2:./db/basededatos

# Usuario y contraseña de la base de datos
spring.datasource.username=sa
spring.datasource.password=

# Le indicamos a JPA/Hibernate que se encargue de generar el DDL
spring.jpa.hibernate.ddl-auto=create-drop

# Habilitamos la consola de H2
# http://localhost/%7Bserver.port%7D/h2-console
# En nuestro caso http://localhost:9000/h2-console
spring.h2.console.enabled=true

# Habilitamos los mensajes sql en el log
spring.jpa.show-sql=true

spring.servlet.multipart.max-file-size=5MB

spring.servlet.multipart.max-request-size=10MB

# multipart
multipart.enabled=true
spring.http.multipart.max-file-size=500000KB
spring.http.multipart.max-request-size=500000KB

image.max-size=512
image.compression-quality=0.75
image.base-path=/files

spring.mail.username=adrinjndro@gmail.com
spring.mail.password=.
mail.smtp.host=smtp.gmail.com
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.port=25
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000